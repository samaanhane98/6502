AND
---
    - IMM: AND #01 (29 01)                      # AC <- AC & 01
        T0: AB <- PC; PC++; 
        T1: AB <- PC; PC++; IR <- MEM[AB]
        
        T2: BI <- MEM[AB]; AI <- AC
        T3: AC <- AI & BI; wrn; wrz
    
    - Z-PAGE: AND $33 (25 33)                   # AC <- AC & MEM[33h]
        T0: AB <- PC; PC++; 
        T1: AB <- PC; PC++; IR <- MEM[AB]
        
        T2: BI <- MEM[AB]; AI <- 0
        T3: ADL <- AI + BI; ADH <- 0;
        T4: BI <- MEM[AB]; AI <- AC
        T5: AC <- AI & BI; wrn; wrz  

    - Z-PAGE,X: AND $13 (35 13)                 # AC <- AC & MEM[13h+X]
        T0: AB <- PC; PC++; 
        T1: AB <- PC; PC++; IR <- MEM[AB]
       
        T2: BI <- MEM[AB]; AI <- X
        T3: ADL <- AI + BI; ADH <- 0
        T4: BI <- MEM[AB]; AI <- AC
        T5: AC <- AI & BI; wrn; wrz
        
    - (IND,X): AND ($36,X) (21 36)              # AC <- AC & MEM[MEM[36h+X]]    OBS: O ENDEREÇO RESULTANTE DE (IND+X) FICA DENTRO DA PÁGINA 0 (00:FF)
        T0: AB <- PC; PC++; 
        T1: AB <- PC; PC++; IR <- MEM[AB]
        
        T2: BI <- MEM[AB]; AI <- X
        T3: ADL <- AI + BI; ADH <- 0                        # AB <- ZERO PAGE ADDRESS
        T4: ADL <- AI + BI + 1; BI <- MEM[AB]; AI <- 0;     # LÊ O LOW BYTE DO ENDEREÇO DO DADO EM BI; ADL TEM END. HIGH BYTE
        T5: ADL <- AI + BI; ADH <- MEM[AB]
        T6: BI <- MEM[AB]; AI <- AC
        T7: AC <- AI & BI; wrn; wrz
        
    - (IND),Y: AND ($A5),Y (31 a5)              # AC <- AC & MEM[MEM[a5h]+Y]
        T0: AB <- PC; PC++; 
        T1: AB <- PC; PC++; IR <- MEM[AB]
        
        T2: BI <- MEM[AB]; AI <- 0
        T3: ADL <- AI + BI; ADH <- 0
        T4: ADL <- AI + BI + 1; BI <- MEM[AB]; AI <- Y      # LÊ LOW BYTE DO ENDEREÇO
        T5: ADL <- BI + AI; BI <- MEM[AB]; AI <- 0;    # LÊ O HIGH BYTE DO ENDEREÇO EM BI E SOMA Y AO LOW BYTE RECÉM LIDO
        T6: ADH <- AI + BI + hc
        T7: BI <- MEM[AB]; AI <- AC
        T8: AC <- AI & BI; wrn; wrz
        
    - ABS: AND $0001 (2d 01 00)                 # AC <- AC & MEM[0001h]
        T0: AB <- PC; PC++; 
        T1: AB <- PC; PC++; IR <- MEM[AB]
        
        T2: AB <- PC; PC++; BI <- MEM[AB]; AI <- 0
        T3: ADL <- AI + BI; ABH <- MEM[AB]
        T4: BI <- MEM[AB]; AI <- AC
        T5: AC <- AI & BI; wrn; wrz
        
    - ABS,X: LDA $12F0,X (3d F0 12)             # AC <- AC & MEM[12F0h+X]
        T0: AB <- PC; PC++; 
        T1: AB <- PC; PC++; IR <- MEM[AB]
        
        T2: AB <- PC; PC++; BI <- MEM[AB]; AI <- X              # LÊ LOW BYTE DO END. BASE
        T3: ADL <- AI + BI; BI <- MEM[AB]; AI <- 0         # BI <- HIGH BYTE DA BASE
        T4: ADH <- AI + BI + hc
        T5: BI <- MEM[AB]; AI <- AC
        T6: AC <- AI & BI; wrn; wrz
        
    - ABS,Y: AND $12F0,Y (39 F0 12)             # AC <- AC & MEM[12F0h+Y]
        T0: AB <- PC; PC++; 
        T1: AB <- PC; PC++; IR <- MEM[AB]
        
        T2: AB <- PC; PC++; BI <- MEM[AB]; AI <- Y              # LÊ LOW BYTE DO END. BASE
        T3: ADL <- AI + BI; BI <- MEM[AB]; AI <- 0         # BI <- HIGH BYTE DA BASE
        T4: ADH <- AI + BI + hc
        T5: BI <- MEM[AB]; AI <- AC
        T6: AC <- AI & BI; wrn; wrz
       
        
     